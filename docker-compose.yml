version: '3.7'
services:
  # ---- APPS SECTION ---- #
  api-gateway:
    container_name: ${DOCKER_REGISTRY-}api-gateway
    image: ghcr.io/ua-tube/api-gateway:latest
    restart: always
    ports:
      - '8000:8000'
    environment:
      COMMUNITY_SVC_ORIGIN: http://community-svc:15500
      HISTORY_SVC_ORIGIN: http://history-svc:15900
      LIBRARY_SVC_ORIGIN: http://library-svc:15600
      SEARCH_SVC_ORIGIN: http://search-svc:15700
      SUBSCRIPTIONS_SVC_ORIGIN: http://subscriptions-svc:15800
      USERS_SVC_ORIGIN: http://users-svc:15400
      VIDEO_MANAGER_SVC_ORIGIN: http://video-manager-svc:15000
      VIDEO_PROCESSOR_SVC_ORIGIN: http://video-processor-svc:11000
      VIDEO_STORE_SVC_ORIGIN: http://video-store-svc:15300
    networks:
      - api-gateway
      - community-svc
      - subscriptions-svc
      - users-svc
      # - video-manager-svc
      # - video-processor-svc
      # - video-store-svc
      # - history-svc
      # - search-svc

  auth-svc:
    container_name: ${DOCKER_REGISTRY-}auth-svc
    image: ghcr.io/ua-tube/auth:latest
    restart: always
    ports:
      - '9000:9000'
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/auth_db?schema=public
    networks:
      - auth-svc
      - storage-svc
      - users-svc
      - subscriptions-svc
      - postgres

  community-svc:
    container_name: ${DOCKER_REGISTRY-}community-svc
    image: ghcr.io/ua-tube/community:latest
    restart: always
    ports:
      - '15500:15500'
    environment:
      AUTH_SVC_URL: http://auth-svc:9000/api/v1/auth/internal
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://root:root@rabbitmq:5672
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/subscriptions_db?schema=public
    networks:
      - api-gateway
      - community-svc
      - auth-svc
      - redis
      - rabbitmq
      - postgres

  # history-svc:
  #   container_name: ${DOCKER_REGISTRY-}history-svc

  # library-svc:
  #   container_name: ${DOCKER_REGISTRY-}library-svc

  # search-svc:
  #   container_name: ${DOCKER_REGISTRY-}search-svc

  storage-svc:
    container_name: ${DOCKER_REGISTRY-}storage-svc
    image: ghcr.io/ua-tube/storage:latest
    restart: always
    ports:
      - '10000:10000'
    environment:
      AUTH_SVC_URL: http://auth-svc:9000/api/v1/auth/internal
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/storage_db?schema=public
      RABBITMQ_URL: amqp://root:root@rabbitmq:5672
    volumes:
      - storage-data:/app
    networks:
      - storage-svc
      - auth-svc
      - postgres
      - rabbitmq

  subscriptions-svc:
    container_name: ${DOCKER_REGISTRY-}subscriptions-svc
    image: ghcr.io/ua-tube/subscriptions:latest
    restart: always
    ports:
      - '15800:15800'
    environment:
      AUTH_SVC_URL: http://auth-svc:9000/api/v1/auth/internal
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://root:root@rabbitmq:5672
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/subscriptions_db?schema=public
    networks:
      - api-gateway
      - subscriptions-svc
      - auth-svc
      - redis
      - rabbitmq
      - postgres

  users-svc:
    container_name: ${DOCKER_REGISTRY-}users-svc
    image: ghcr.io/ua-tube/users:latest
    restart: always
    ports:
      - '15400:15400'
    environment:
      AUTH_SVC_URL: http://auth-svc:9000/api/v1/auth/internal
      RABBITMQ_URL: amqp://root:root@rabbitmq:5672
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/users_db?schema=public
    networks:
      - api-gateway
      - users-svc
      - auth-svc
      - rabbitmq
      - postgres

  # ---- SERVICES SECTION ---- #
  postgres:
    container_name: ${DOCKER_REGISTRY-}postgres
    image: postgres:16.2-alpine
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATA: /var/data
    volumes:
      - pg-data:/var/data
    networks:
      - postgres
      - auth-svc
      - storage-svc
      - subscriptions-svc
      - users-svc

  pgadmin:
    container_name: ${DOCKER_REGISTRY-}pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/root/.pgadmin
    networks:
      - postgres

  rabbitmq:
    container_name: ${DOCKER_REGISTRY-}rabbitmq
    image: rabbitmq:3.13.0-management-alpine
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - rabbitmq
      - storage-svc
      - subscriptions-svc
      - users-svc

  mongo:
    container_name: ${DOCKER_REGISTRY-}mongo
    image: mongo:7.0.9
    restart: always
    ports:
      - '27017:27017'
    healthcheck:
      test: [ 'CMD', 'mongosh', '--eval', 'rs.initiate()' ]
      interval: 10s
    volumes:
      - mongo-data:/data/db
    networks:
      - mongo

  meilisearch:
    container_name: ${DOCKER_REGISTRY-}meilisearch
    image: getmeili/meilisearch:v1.8
    restart: always
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=UaTubeMaster
      - MEILI_NO_ANALYTICS=true
      - MEILI_ENV=development
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=/data.ms
    ports:
      - '7700:7700'
    volumes:
      - 'meilisearch-data:/data.ms'
    networks:
      - meilisearch

  redis:
    container_name: ${DOCKER_REGISTRY-}redis
    image: redis:6.2.14-alpine
    restart: always
    ports:
      - '6379:6379'
    command: [ 'redis-server', '--appendonly', 'yes' ]
    volumes:
      - redis-data:/data
    networks:
      - redis
      - subscriptions-svc
      - video-processor-svc

# --- VOLUMES ---- #
volumes:
  pg-data:
  pgadmin-data:
  rabbitmq-data:
  mongo-data:
  meilisearch-data:
  redis-data:
  storage-data:

# ---- NETWORKS ---- #
networks:
  api-gateway:
    driver: bridge
  auth-svc:
    driver: bridge
  community-svc:
    driver: bridge
  history-svc:
    driver: bridge
  library-svc:
    driver: bridge
  search-svc:
    driver: bridge
  storage-svc:
    driver: bridge
  subscriptions-svc:
    driver: bridge
  users-svc:
    driver: bridge
  video-manager-svc:
    driver: bridge
  video-processor-svc:
    driver: bridge
  video-store-svc:
    driver: bridge
  postgres:
    driver: bridge
  mongo:
    driver: bridge
  meilisearch:
    driver: bridge
  rabbitmq:
    driver: bridge
  redis:
    driver: bridge
